;buildInfoPackage: chisel3, version: 3.3-SNAPSHOT, scalaVersion: 2.12.11, sbtVersion: 1.3.10
circuit N64DevCartMain : 
  module N64DevCartMain : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip n64adi : UInt<16>, flip n64readn : UInt<1>, flip n64alel : UInt<1>, flip n64aleh : UInt<1>, n64ado : UInt<16>}
    
    cmem memory : UInt<16>[262144] @[N64DevCartMain.scala 15:21]
    reg addr : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[N64DevCartMain.scala 17:23]
    node _T = eq(io.n64aleh, UInt<1>("h00")) @[N64DevCartMain.scala 18:11]
    node _T_1 = eq(io.n64aleh, UInt<1>("h00")) @[N64DevCartMain.scala 18:35]
    reg _T_2 : UInt<1>, clock @[N64DevCartMain.scala 18:34]
    _T_2 <= _T_1 @[N64DevCartMain.scala 18:34]
    node _T_3 = eq(_T_2, UInt<1>("h00")) @[N64DevCartMain.scala 18:26]
    node _T_4 = and(_T, _T_3) @[N64DevCartMain.scala 18:23]
    when _T_4 : @[N64DevCartMain.scala 18:49]
      node _T_5 = and(addr, UInt<16>("h0ffff")) @[N64DevCartMain.scala 19:23]
      node _T_6 = and(io.n64adi, UInt<16>("h0ffff")) @[N64DevCartMain.scala 19:50]
      node _T_7 = shl(_T_6, 16) @[N64DevCartMain.scala 19:63]
      node _T_8 = or(_T_5, _T_7) @[N64DevCartMain.scala 19:36]
      addr <= _T_8 @[N64DevCartMain.scala 19:14]
      skip @[N64DevCartMain.scala 18:49]
    else : @[N64DevCartMain.scala 20:55]
      node _T_9 = eq(io.n64alel, UInt<1>("h00")) @[N64DevCartMain.scala 20:17]
      node _T_10 = eq(io.n64alel, UInt<1>("h00")) @[N64DevCartMain.scala 20:41]
      reg _T_11 : UInt<1>, clock @[N64DevCartMain.scala 20:40]
      _T_11 <= _T_10 @[N64DevCartMain.scala 20:40]
      node _T_12 = eq(_T_11, UInt<1>("h00")) @[N64DevCartMain.scala 20:32]
      node _T_13 = and(_T_9, _T_12) @[N64DevCartMain.scala 20:29]
      when _T_13 : @[N64DevCartMain.scala 20:55]
        node _T_14 = and(addr, UInt<32>("h0ffff0000")) @[N64DevCartMain.scala 21:23]
        node _T_15 = and(io.n64adi, UInt<16>("h0ffff")) @[N64DevCartMain.scala 21:53]
        node _T_16 = or(_T_14, _T_15) @[N64DevCartMain.scala 21:40]
        addr <= _T_16 @[N64DevCartMain.scala 21:14]
        skip @[N64DevCartMain.scala 20:55]
      else : @[N64DevCartMain.scala 22:55]
        node _T_17 = eq(io.n64readn, UInt<1>("h00")) @[N64DevCartMain.scala 22:40]
        reg _T_18 : UInt<1>, clock @[N64DevCartMain.scala 22:39]
        _T_18 <= _T_17 @[N64DevCartMain.scala 22:39]
        node _T_19 = and(io.n64readn, _T_18) @[N64DevCartMain.scala 22:29]
        when _T_19 : @[N64DevCartMain.scala 22:55]
          node _T_20 = add(addr, UInt<2>("h02")) @[N64DevCartMain.scala 23:22]
          node _T_21 = tail(_T_20, 1) @[N64DevCartMain.scala 23:22]
          addr <= _T_21 @[N64DevCartMain.scala 23:14]
          skip @[N64DevCartMain.scala 22:55]
    io.n64ado <= UInt<3>("h06") @[N64DevCartMain.scala 25:15]
    
