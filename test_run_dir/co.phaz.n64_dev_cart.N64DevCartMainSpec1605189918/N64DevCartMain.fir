;buildInfoPackage: chisel3, version: 3.3-SNAPSHOT, scalaVersion: 2.12.11, sbtVersion: 1.3.10
circuit N64DevCartMain : 
  module N64DevCartMain : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip n64adi : UInt<16>, flip n64readn : UInt<1>, flip n64alel : UInt<1>, flip n64aleh : UInt<1>, n64ado : UInt<16>}
    
    wire memory : UInt<16>[25] @[N64DevCartMain.scala 15:25]
    memory[0] <= UInt<16>("h02") @[N64DevCartMain.scala 15:25]
    memory[1] <= UInt<16>("h03") @[N64DevCartMain.scala 15:25]
    memory[2] <= UInt<16>("h05") @[N64DevCartMain.scala 15:25]
    memory[3] <= UInt<16>("h07") @[N64DevCartMain.scala 15:25]
    memory[4] <= UInt<16>("h0b") @[N64DevCartMain.scala 15:25]
    memory[5] <= UInt<16>("h0d") @[N64DevCartMain.scala 15:25]
    memory[6] <= UInt<16>("h011") @[N64DevCartMain.scala 15:25]
    memory[7] <= UInt<16>("h013") @[N64DevCartMain.scala 15:25]
    memory[8] <= UInt<16>("h017") @[N64DevCartMain.scala 15:25]
    memory[9] <= UInt<16>("h01d") @[N64DevCartMain.scala 15:25]
    memory[10] <= UInt<16>("h01f") @[N64DevCartMain.scala 15:25]
    memory[11] <= UInt<16>("h025") @[N64DevCartMain.scala 15:25]
    memory[12] <= UInt<16>("h029") @[N64DevCartMain.scala 15:25]
    memory[13] <= UInt<16>("h02b") @[N64DevCartMain.scala 15:25]
    memory[14] <= UInt<16>("h02f") @[N64DevCartMain.scala 15:25]
    memory[15] <= UInt<16>("h035") @[N64DevCartMain.scala 15:25]
    memory[16] <= UInt<16>("h03b") @[N64DevCartMain.scala 15:25]
    memory[17] <= UInt<16>("h03d") @[N64DevCartMain.scala 15:25]
    memory[18] <= UInt<16>("h043") @[N64DevCartMain.scala 15:25]
    memory[19] <= UInt<16>("h047") @[N64DevCartMain.scala 15:25]
    memory[20] <= UInt<16>("h049") @[N64DevCartMain.scala 15:25]
    memory[21] <= UInt<16>("h04f") @[N64DevCartMain.scala 15:25]
    memory[22] <= UInt<16>("h053") @[N64DevCartMain.scala 15:25]
    memory[23] <= UInt<16>("h059") @[N64DevCartMain.scala 15:25]
    memory[24] <= UInt<16>("h061") @[N64DevCartMain.scala 15:25]
    reg addr : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[N64DevCartMain.scala 23:23]
    node _T = eq(io.n64aleh, UInt<1>("h00")) @[N64DevCartMain.scala 24:11]
    node _T_1 = eq(io.n64aleh, UInt<1>("h00")) @[N64DevCartMain.scala 24:35]
    reg _T_2 : UInt<1>, clock @[N64DevCartMain.scala 24:34]
    _T_2 <= _T_1 @[N64DevCartMain.scala 24:34]
    node _T_3 = eq(_T_2, UInt<1>("h00")) @[N64DevCartMain.scala 24:26]
    node _T_4 = and(_T, _T_3) @[N64DevCartMain.scala 24:23]
    when _T_4 : @[N64DevCartMain.scala 24:49]
      node _T_5 = and(addr, UInt<16>("h0ffff")) @[N64DevCartMain.scala 25:23]
      node _T_6 = and(io.n64adi, UInt<16>("h0ffff")) @[N64DevCartMain.scala 25:50]
      node _T_7 = shl(_T_6, 16) @[N64DevCartMain.scala 25:63]
      node _T_8 = or(_T_5, _T_7) @[N64DevCartMain.scala 25:36]
      addr <= _T_8 @[N64DevCartMain.scala 25:14]
      skip @[N64DevCartMain.scala 24:49]
    else : @[N64DevCartMain.scala 26:55]
      node _T_9 = eq(io.n64alel, UInt<1>("h00")) @[N64DevCartMain.scala 26:17]
      node _T_10 = eq(io.n64alel, UInt<1>("h00")) @[N64DevCartMain.scala 26:41]
      reg _T_11 : UInt<1>, clock @[N64DevCartMain.scala 26:40]
      _T_11 <= _T_10 @[N64DevCartMain.scala 26:40]
      node _T_12 = eq(_T_11, UInt<1>("h00")) @[N64DevCartMain.scala 26:32]
      node _T_13 = and(_T_9, _T_12) @[N64DevCartMain.scala 26:29]
      when _T_13 : @[N64DevCartMain.scala 26:55]
        node _T_14 = and(addr, UInt<32>("h0ffff0000")) @[N64DevCartMain.scala 27:23]
        node _T_15 = and(io.n64adi, UInt<16>("h0ffff")) @[N64DevCartMain.scala 27:53]
        node _T_16 = or(_T_14, _T_15) @[N64DevCartMain.scala 27:40]
        addr <= _T_16 @[N64DevCartMain.scala 27:14]
        skip @[N64DevCartMain.scala 26:55]
      else : @[N64DevCartMain.scala 28:55]
        node _T_17 = eq(io.n64readn, UInt<1>("h00")) @[N64DevCartMain.scala 28:40]
        reg _T_18 : UInt<1>, clock @[N64DevCartMain.scala 28:39]
        _T_18 <= _T_17 @[N64DevCartMain.scala 28:39]
        node _T_19 = and(io.n64readn, _T_18) @[N64DevCartMain.scala 28:29]
        when _T_19 : @[N64DevCartMain.scala 28:55]
          node _T_20 = add(addr, UInt<2>("h02")) @[N64DevCartMain.scala 29:22]
          node _T_21 = tail(_T_20, 1) @[N64DevCartMain.scala 29:22]
          addr <= _T_21 @[N64DevCartMain.scala 29:14]
          skip @[N64DevCartMain.scala 28:55]
    node _T_22 = shr(addr, 1) @[N64DevCartMain.scala 31:30]
    node _T_23 = bits(_T_22, 4, 0)
    io.n64ado <= memory[_T_23] @[N64DevCartMain.scala 31:15]
    
